#相关名词：
加载：Loading
验证：Verification
准备：Preparation
解析：Resolution
初始化：Initialization
使用：Using
卸载：Unloading
连接：Linking（包括：验证、准备、解析）

#工作顺序：
加载、验证、准备、初始化、卸载这5个阶段按顺序开始（仅仅是开始而不是“进行”和“完成”），
解析阶段不一定：在某些情况下在初始化之后再开始，某些情况下在准备后开始

#初始化的5中情况：
虚拟机规定有且只有5中情况必须立即对类进行“初始化”：
1）遇到new、getstatic、putstatic、或invokestatic这4条字节码命令时，如果没有进行初始化，
则需要先触发其初始化。生成这4条指令的最常见的Java代码场景是：使用new关键字实例化对象
的时候、读取或设置一个类的静态字段（被final修饰、已在编译器把结果放入常量池的静态字段
除外）的时候，以及调用一个类的静态方法的时候。
2）使用java.lang.reflect包的方法对类进行反射调用的时候，如果累没有进行过初始化，则需
要先触发其初始化。
3）当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。
4）当虚拟机启动时，用户需要制定给一个要执行的朱磊（包含mian（）方法的那个类），虚拟机
会先初始化这个主类。
5）当使用JDK1.7的动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解析
结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法疾病，并且这个方法句柄所对应的
类没有进行过初始化，则需要先触发其初始化。
